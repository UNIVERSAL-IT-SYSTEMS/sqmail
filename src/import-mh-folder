#!/usr/bin/env python

import sys, os, stat, re, getopt, string

def printusage():
	print """
Syntax:  import-mh-folder [options] directory

Options:
--sqmail-cmd command    Instead of running "SQmaiL", run command.  This
                          could be useful if SQmaiL isn't in your path.
-i                      If an SQmaiL command fails, don't abort.  Instead,
                          process all messages, and then print out the
                          messages which failed.
-s                      Suppress SQmaiL output for quieter operation
-r regular_expression   Override the default regexp ^[0-9]+$ and instead
                          include/exclude files matching new pattern

import-mh-folder reads a directory, and runs "SQmaiL fetch file" on
all the files in that folder with numerical filenames.  For instance, if

$ ls foo
1   12  15  18  20  23  26  29  31  34  37  4   42  45  7  comp409
10  13  16  19  21  24  27  3   32  35  38  40  43  5   8  profs
11  14  17  2   22  25  28  30  33  36  39  41  44  6   9  tech

Then running "import-mh-folder foo" would result in SQmaiL getting run
like so:

SQmaiL fetch file foo/1
SQmaiL fetch file foo/2
...
SQmaiL fetch file foo/45
"""

def usage_error(errmsg):
	print errmsg
	printusage()
	sys.exit(1)

def check_args():
	"""Make sure argument is right, return directory name"""
	global sqmail_cmd, quiet, retry, badmsgs, regexp
	sqmail_cmd = "SQmaiL"
	quiet = None
	retry = None
	badmsgs = []
	regexp = re.compile("^[0-9]+$")

	try: optlist, args = getopt.getopt(sys.argv[1:], "isr:", ["sqmail-cmd="])
	except getopt.error: usage_error("Unable to parse arguments")

	if len(args) != 1: usage_error("Error: Wrong number of arguments.")

	for opt, arg in optlist:
		if opt == '-s': quiet = 1
		elif opt == '-i': retry = 1
		elif opt == '--sqmail-cmd': sqmail_cmd = arg
		elif opt == '-r': regexp = re.compile(arg)

	dirname = args[0]
	try: dirstats = os.stat(dirname)
	except os.error: usage_error("Error: cannot find file %s" % dirname)
	if not stat.S_ISDIR(dirstats[stat.ST_MODE]):
		usage_error("Error: file %s is not a directory" % dirname)

	return dirname

def get_sorted_list(dirname):
	"""Return sorted list of files to import"""
	global regexp
	filelist = os.listdir(dirname)

	numbers_only = filter(regexp.search, filelist)
	sortable_pairs = map(lambda x, d=dirname: (int(x), os.path.join(d, x)),
						 numbers_only)
	sortable_pairs.sort()
	return sortable_pairs

def sqmail_import((msgnum, filename)):
	"""Run sqmail fetch on filename"""
	cmdline = "%s fetch file %s" % (sqmail_cmd, filename)
	if quiet: cmdline = cmdline + " > /dev/null"
	print cmdline
	if os.system(cmdline):
		print "External error attempting to run SQmaiL"
		if retry: badmsgs.append(msgnum)
		else: sys.exit(2)


for pair in get_sorted_list(check_args()): sqmail_import(pair)
if badmsgs:
	print "External errors while importing the following messages:"
	print string.join(map(str, badmsgs))

